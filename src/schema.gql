# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateCommonInput {
  name: String!
}

input CreateSpecialistInput {
  lastName: String!
  name: String!
}

input CreateTreatmentFileInput {
  consultationDate: DateTime!
  patient: PatientInput!
  status: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Equipment {
  id: Float!
  name: String!
  treatmentsFiles: [TreatmentFile!]!
}

type Location {
  id: Float!
  name: String!
  treatmentsFiles: [TreatmentFile!]!
}

type Mutation {
  createEquipment(createEquipmentInput: CreateCommonInput!): Equipment!
  createLocation(createLocationInput: CreateCommonInput!): Location!
  createSpecialist(newSpecialist: CreateSpecialistInput!): Specialist!
  createTreatmentFile(createTreatmentFile: CreateTreatmentFileInput!): TreatmentFile!
  removeEquipment(id: ID!): Equipment!
  removeLocation(id: ID!): ID!
  removeSpecialist(id: ID!): ID!
  removeTreatmentFile(id: Int!): Boolean!
  updateEquipment(updateEquipmentInput: UpdateCommonInput!): Equipment!
  updateLocation(updateLocationInput: UpdateCommonInput!): Location!
  updateSpecialist(updateSpecialistInput: UpdateSpecialistInput!): Specialist!
  updateTreatmentFile(updateTreatmentFileInput: UpdateTreatmentFileInput!): TreatmentFile!
}

type Patient {
  address: String!
  age: Float!
  clinic: String!
  id: Float!
  lastName: String!
  municipality: String!
  name: String!
  phone: Float!
  province: String!
  sex: String!
  treatmentsFiles: [TreatmentFile!]!
}

input PatientInput {
  address: String
  age: Float
  clinic: String
  id: Float
  lastname: String
  municipality: String
  phone: Float
  province: String
  sex: String
}

type Query {
  Location(id: ID!): Location!
  Locations: [Location!]!
  equipment(id: ID!): Equipment!
  equipments: [Equipment!]!
  specialist(id: ID!): Specialist!
  specialists: [Specialist!]!
  treatmentFile(id: Int!): TreatmentFile!
  treatmentsFiles: [TreatmentFile!]!
}

type Specialist {
  id: Float!
  lastName: String!
  name: String!
  treatmenstFiles: [TreatmentFile!]!
}

type TreatmentFile {
  consultationDate: Date!
  createAt: Date!
  equipment: Equipment!
  id: Float!
  location: Location!
  patient: Patient!
  speciaList: Specialist!
  status: String!
}

input UpdateCommonInput {
  id: Float!
  name: String
}

input UpdateSpecialistInput {
  id: Float!
  lastName: String
  name: String
}

input UpdateTreatmentFileInput {
  consultationDate: DateTime
  id: Int!
  patient: PatientInput
  status: String
}
